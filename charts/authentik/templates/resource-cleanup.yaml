---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-resource-cleanup-role
  labels:
    {{- include "authentik.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "1"
rules:
- apiGroups: ["","apps","rbac.authorization.k8s.io","batch","monitoring.coreos.com"]
  resources: ["deployments", "services", "secrets","servicemonitors"]
  verbs: ["get","list","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-resource-cleanup-rolebinding
  labels:
    {{- include "authentik.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "1"
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: {{ .Release.Name }}-resource-cleanup-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-resource-cleanup
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "2"
  labels:
    {{- include "authentik.labels" $ | nindent 4 }}
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: cleanup
        image: bitnami/kubectl:1.20.15
        command: ["sh", "-c"]
        args:
        - |
          kubectl delete --ignore-not-found=true $(kubectl get deploy,svc,servicemonitor -l app.kubernetes.io/managed-by=goauthentik.io | grep {{ .Release.Name }} | awk {'print $1'} | xargs) || :
          kubectl delete --ignore-not-found=true secret {{ include "coreweave.certSecretName" . }}
          kubectl delete secret -l app.kubernetes.io/instance={{ .Release.Name }}
  backoffLimit: 0
